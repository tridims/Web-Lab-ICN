version: "3"

services:
  web:
    container_name: web_app_lab_jarkom
    build:
      context: .
      dockerfile: Dockerfile
    user: node
    command: sh -c "npm install && npx prisma migrate dev --name init && npm run dev"
    env_file: ".env"
    restart: always
    environment:
      DATABASE_URL: "postgresql://$DATABASE_USER:$DATABASE_PASSWORD@db/$DATABASE"
    working_dir: /app
    ports:
      - 80:3000
    volumes:
      - .:/app:rw
    depends_on:
      db:
        condition: service_healthy
    networks:
      - network_app_lab_jarkom

  db:
    image: postgres:latest
    container_name: db_app_lab_jarkom
    env_file: ".env"
    environment:
      POSTGRES_USER: "$DATABASE_USER"
      POSTGRES_PASSWORD: "$DATABASE_PASSWORD"
      POSTGRES_DB: "$DATABASE"
      PGUSER: "$DATABASE_USER"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $DATABASE_USER -d $DATABASE'"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      - network_app_lab_jarkom
    volumes:
      - dbcont:/var/lib/postgresql/data:rw
    ports:
      - 5432:5432

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_app_lab_jarkom
    env_file: ".env"
    environment:
      PGADMIN_DEFAULT_EMAIL: "$PG_EMAIL"
      PGADMIN_DEFAULT_PASSWORD: "$PG_PASSWORD"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - network_app_lab_jarkom
    ports:
      - 8080:80

networks:
  network_app_lab_jarkom:
    driver: bridge
    name: network_app_lab_jarkom

volumes:
  .:
    name: web_app_lab_jarkom_volume
  dbcont:
    name: db_app_lab_jarkom_volume
